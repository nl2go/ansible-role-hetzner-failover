---
  scenario:
    test_sequence:
      - lint
      - cleanup
      - destroy
      - dependency
      - syntax
      - create
      - prepare
      - converge
      # - idempotence # cuurently checks if service is running but that does not work in docker
      - side_effect
      - verify
      - cleanup
      - destroy
  driver:
    name: hetznercloud
  lint: |
    set -e
    yamllint .
  platforms:
    - name: keepalived1
      server_type: cx11
      image: debian-10
      location: nbg1
      groups:
        - platforms
    - name: keepalived2
      server_type: cx11
      image: debian-10
      location: nbg1
      groups:
        - platforms
  provisioner:
    name: ansible
    inventory:
      group_vars:
        all:
          hetzner_vswitch_webservice_username: robot
          hetzner_vswitch_webservice_password: secret
          hetzner_robot_mock_service_hcloud_image_id: "13532056"
      host_vars:
        keepalived1:
          hetzner_vswitch_host:
            - name: failover
              ipv4_address: 192.168.200.1
          hetzner_failover_keepalived_state: MASTER
          hetzner_failover_keepalived_vswitch_ip: 192.168.200.1
          hetzner_failover_keepalived_peer_ip: 192.168.200.2
        keepalived2:
          hetzner_vswitch_host:
            - name: failover
              ipv4_address: 192.168.200.2
          hetzner_failover_keepalived_state: BACKUP
          hetzner_failover_keepalived_vswitch_ip: 192.168.200.2
          hetzner_failover_keepalived_peer_ip: 192.168.200.1
    lint: |
      set -e
      ansible-lint
    playbooks:
      prepare: ../resources/playbooks/prepare.yml
      cleanup: ../resources/playbooks/cleanup.yml
  verifier:
    name: ansible
    lint: |
      set -e
      ansible-lint
